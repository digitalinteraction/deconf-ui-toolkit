//
// A plugin for rollup to take all sass out and combine into a single scss
// file to be imported by clients
//

import fs from 'fs';
import { createFilter } from 'rollup-pluginutils';

const sassSeperator = '\n\n\n';
const sassBlock = (name, inner) =>
  [`/* START ${name} */`, inner, `/* END ${name} */`].join('\n');

/** @returns {import("rollup").PluginHooks} */
export default function(options = {}) {
  const {
    filename = 'theme.scss',
    include = ['/**/*.css', '/**/*.scss', '/**/*.sass'],
    exclude,
    prependData = null,
    appendData = null
  } = options;

  const filter = createFilter(include, exclude);

  const styles = new Map();

  return {
    name: 'scss',
    transform(code, id) {
      if (!filter(id)) return;

      styles.set(id, code);

      return {
        code: ``,
        mappings: ''
      };
    },
    generateBundle(options) {
      if (options.output === false) return;

      const components = [`/* AUTOGENERATED SASS FILE */`];

      if (prependData) {
        components.push(sassBlock('PREPEND_DATA', prependData));
      }

      // Compose sass into blocks
      for (const [id, code] of styles) {
        components.push(sassBlock(id, code));
      }

      if (appendData) {
        components.push(sassBlock('APPEND_DATA', appendData));
      }

      // Emit the new file
      this.emitFile({
        type: 'asset',
        fileName: filename,
        source: components.join(sassSeperator)
      });
    }
  };
}
